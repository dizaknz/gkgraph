// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AttrValue_AttrType int32

const (
	AttrValue_STRING AttrValue_AttrType = 0
	AttrValue_INT    AttrValue_AttrType = 1
	AttrValue_FLOAT  AttrValue_AttrType = 2
	AttrValue_OBJECT AttrValue_AttrType = 3
)

var AttrValue_AttrType_name = map[int32]string{
	0: "STRING",
	1: "INT",
	2: "FLOAT",
	3: "OBJECT",
}

var AttrValue_AttrType_value = map[string]int32{
	"STRING": 0,
	"INT":    1,
	"FLOAT":  2,
	"OBJECT": 3,
}

func (x AttrValue_AttrType) String() string {
	return proto.EnumName(AttrValue_AttrType_name, int32(x))
}

func (AttrValue_AttrType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{0, 0}
}

type AttrValue struct {
	Attr                 string             `protobuf:"bytes,1,opt,name=attr,proto3" json:"attr,omitempty"`
	Val                  string             `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
	Typ                  AttrValue_AttrType `protobuf:"varint,3,opt,name=typ,proto3,enum=pb.AttrValue_AttrType" json:"typ,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AttrValue) Reset()         { *m = AttrValue{} }
func (m *AttrValue) String() string { return proto.CompactTextString(m) }
func (*AttrValue) ProtoMessage()    {}
func (*AttrValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{0}
}

func (m *AttrValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttrValue.Unmarshal(m, b)
}
func (m *AttrValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttrValue.Marshal(b, m, deterministic)
}
func (m *AttrValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttrValue.Merge(m, src)
}
func (m *AttrValue) XXX_Size() int {
	return xxx_messageInfo_AttrValue.Size(m)
}
func (m *AttrValue) XXX_DiscardUnknown() {
	xxx_messageInfo_AttrValue.DiscardUnknown(m)
}

var xxx_messageInfo_AttrValue proto.InternalMessageInfo

func (m *AttrValue) GetAttr() string {
	if m != nil {
		return m.Attr
	}
	return ""
}

func (m *AttrValue) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

func (m *AttrValue) GetTyp() AttrValue_AttrType {
	if m != nil {
		return m.Typ
	}
	return AttrValue_STRING
}

type EventLink struct {
	EventID              string       `protobuf:"bytes,1,opt,name=eventID,proto3" json:"eventID,omitempty"`
	EventType            string       `protobuf:"bytes,2,opt,name=eventType,proto3" json:"eventType,omitempty"`
	LinkType             string       `protobuf:"bytes,3,opt,name=linkType,proto3" json:"linkType,omitempty"`
	Attrs                []*AttrValue `protobuf:"bytes,4,rep,name=attrs,proto3" json:"attrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *EventLink) Reset()         { *m = EventLink{} }
func (m *EventLink) String() string { return proto.CompactTextString(m) }
func (*EventLink) ProtoMessage()    {}
func (*EventLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{1}
}

func (m *EventLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventLink.Unmarshal(m, b)
}
func (m *EventLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventLink.Marshal(b, m, deterministic)
}
func (m *EventLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventLink.Merge(m, src)
}
func (m *EventLink) XXX_Size() int {
	return xxx_messageInfo_EventLink.Size(m)
}
func (m *EventLink) XXX_DiscardUnknown() {
	xxx_messageInfo_EventLink.DiscardUnknown(m)
}

var xxx_messageInfo_EventLink proto.InternalMessageInfo

func (m *EventLink) GetEventID() string {
	if m != nil {
		return m.EventID
	}
	return ""
}

func (m *EventLink) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *EventLink) GetLinkType() string {
	if m != nil {
		return m.LinkType
	}
	return ""
}

func (m *EventLink) GetAttrs() []*AttrValue {
	if m != nil {
		return m.Attrs
	}
	return nil
}

type EventMessage struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Typ                  string               `protobuf:"bytes,2,opt,name=typ,proto3" json:"typ,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Attrs                []*AttrValue         `protobuf:"bytes,4,rep,name=attrs,proto3" json:"attrs,omitempty"`
	Links                []*EventLink         `protobuf:"bytes,5,rep,name=links,proto3" json:"links,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EventMessage) Reset()         { *m = EventMessage{} }
func (m *EventMessage) String() string { return proto.CompactTextString(m) }
func (*EventMessage) ProtoMessage()    {}
func (*EventMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{2}
}

func (m *EventMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventMessage.Unmarshal(m, b)
}
func (m *EventMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventMessage.Marshal(b, m, deterministic)
}
func (m *EventMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventMessage.Merge(m, src)
}
func (m *EventMessage) XXX_Size() int {
	return xxx_messageInfo_EventMessage.Size(m)
}
func (m *EventMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EventMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EventMessage proto.InternalMessageInfo

func (m *EventMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EventMessage) GetTyp() string {
	if m != nil {
		return m.Typ
	}
	return ""
}

func (m *EventMessage) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *EventMessage) GetAttrs() []*AttrValue {
	if m != nil {
		return m.Attrs
	}
	return nil
}

func (m *EventMessage) GetLinks() []*EventLink {
	if m != nil {
		return m.Links
	}
	return nil
}

type AddRequest struct {
	Event                *EventMessage `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{3}
}

func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (m *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(m, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetEvent() *EventMessage {
	if m != nil {
		return m.Event
	}
	return nil
}

type AddReply struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddReply) Reset()         { *m = AddReply{} }
func (m *AddReply) String() string { return proto.CompactTextString(m) }
func (*AddReply) ProtoMessage()    {}
func (*AddReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{4}
}

func (m *AddReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddReply.Unmarshal(m, b)
}
func (m *AddReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddReply.Marshal(b, m, deterministic)
}
func (m *AddReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddReply.Merge(m, src)
}
func (m *AddReply) XXX_Size() int {
	return xxx_messageInfo_AddReply.Size(m)
}
func (m *AddReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddReply proto.InternalMessageInfo

func (m *AddReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *AddReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterEnum("pb.AttrValue_AttrType", AttrValue_AttrType_name, AttrValue_AttrType_value)
	proto.RegisterType((*AttrValue)(nil), "pb.AttrValue")
	proto.RegisterType((*EventLink)(nil), "pb.EventLink")
	proto.RegisterType((*EventMessage)(nil), "pb.EventMessage")
	proto.RegisterType((*AddRequest)(nil), "pb.AddRequest")
	proto.RegisterType((*AddReply)(nil), "pb.AddReply")
}

func init() { proto.RegisterFile("event.proto", fileDescriptor_2d17a9d3f0ddf27e) }

var fileDescriptor_2d17a9d3f0ddf27e = []byte{
	// 406 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x51, 0x4d, 0x8b, 0xd4, 0x40,
	0x10, 0x35, 0xe9, 0xcd, 0x6e, 0x52, 0x59, 0x87, 0x50, 0x07, 0x09, 0x41, 0x70, 0xc8, 0x82, 0xe4,
	0x20, 0x59, 0x88, 0x22, 0x9e, 0x84, 0xa8, 0xab, 0x8c, 0xac, 0xbb, 0xd0, 0x06, 0xef, 0xc9, 0xa6,
	0x1d, 0xc2, 0x66, 0x26, 0xed, 0x74, 0x67, 0x21, 0x77, 0xff, 0x81, 0x7f, 0xc5, 0x1f, 0x28, 0x5d,
	0xf9, 0x18, 0xbc, 0xed, 0xad, 0xaa, 0xde, 0xab, 0xee, 0xf7, 0x5e, 0x81, 0x2f, 0x1e, 0xc4, 0x5e,
	0xa7, 0xf2, 0xd0, 0xe9, 0x0e, 0x6d, 0x59, 0x45, 0x2f, 0xb6, 0x5d, 0xb7, 0x6d, 0xc5, 0x25, 0x4d,
	0xaa, 0xfe, 0xe7, 0xa5, 0x6e, 0x76, 0x42, 0xe9, 0x72, 0x27, 0x47, 0x52, 0xfc, 0xc7, 0x02, 0x2f,
	0xd7, 0xfa, 0xf0, 0xa3, 0x6c, 0x7b, 0x81, 0x08, 0x27, 0xa5, 0xd6, 0x87, 0xd0, 0x5a, 0x5b, 0x89,
	0xc7, 0xa9, 0xc6, 0x00, 0xd8, 0x43, 0xd9, 0x86, 0x36, 0x8d, 0x4c, 0x89, 0x09, 0x30, 0x3d, 0xc8,
	0x90, 0xad, 0xad, 0x64, 0x95, 0x3d, 0x4b, 0x65, 0x95, 0x2e, 0x2f, 0x50, 0x55, 0x0c, 0x52, 0x70,
	0x43, 0x89, 0xdf, 0x82, 0x3b, 0x0f, 0x10, 0xe0, 0xf4, 0x7b, 0xc1, 0x37, 0x37, 0x5f, 0x82, 0x27,
	0x78, 0x06, 0x6c, 0x73, 0x53, 0x04, 0x16, 0x7a, 0xe0, 0x7c, 0xbe, 0xbe, 0xcd, 0x8b, 0xc0, 0x36,
	0xf8, 0xed, 0x87, 0xaf, 0x57, 0x1f, 0x8b, 0x80, 0xc5, 0xbf, 0x2d, 0xf0, 0xae, 0x8c, 0x95, 0xeb,
	0x66, 0x7f, 0x8f, 0x21, 0x9c, 0x91, 0xaf, 0xcd, 0xa7, 0x49, 0xd8, 0xdc, 0xe2, 0x73, 0xf0, 0xa8,
	0x34, 0x1f, 0x4c, 0x0a, 0x8f, 0x03, 0x8c, 0xc0, 0x6d, 0x9b, 0xfd, 0x3d, 0x81, 0x8c, 0xc0, 0xa5,
	0xc7, 0x0b, 0x70, 0x8c, 0x3b, 0x15, 0x9e, 0xac, 0x59, 0xe2, 0x67, 0x4f, 0xff, 0x73, 0xc1, 0x47,
	0x2c, 0xfe, 0x6b, 0xc1, 0x39, 0xc9, 0xf8, 0x26, 0x94, 0x2a, 0xb7, 0x02, 0x57, 0x60, 0x37, 0xf5,
	0x24, 0xc2, 0x6e, 0x6a, 0x93, 0x8d, 0x49, 0x62, 0xca, 0x46, 0x0f, 0x12, 0xdf, 0x81, 0xb7, 0x44,
	0x4c, 0x9f, 0xfa, 0x59, 0x94, 0x8e, 0x47, 0x48, 0xe7, 0x23, 0xa4, 0xc5, 0xcc, 0xe0, 0x47, 0xf2,
	0xa3, 0x14, 0x19, 0x92, 0xb1, 0xa0, 0x42, 0xe7, 0x48, 0x5a, 0x82, 0xe2, 0x23, 0x16, 0xbf, 0x01,
	0xc8, 0xeb, 0x9a, 0x8b, 0x5f, 0xbd, 0x50, 0x1a, 0x5f, 0x82, 0x43, 0x91, 0x90, 0x6c, 0x3f, 0x0b,
	0x96, 0x95, 0xc9, 0x14, 0x1f, 0xe1, 0xf8, 0x3d, 0xb8, 0xb4, 0x25, 0xdb, 0xc1, 0x24, 0xae, 0xfa,
	0xbb, 0x3b, 0xa1, 0x14, 0x6d, 0xb9, 0x7c, 0x6e, 0x0d, 0xb2, 0x1b, 0xf7, 0x26, 0xd7, 0x73, 0x9b,
	0xbd, 0x02, 0x87, 0x9e, 0xc5, 0x0b, 0x60, 0x79, 0x5d, 0xe3, 0x8a, 0x0c, 0x2c, 0x3a, 0xa2, 0xf3,
	0xa5, 0x97, 0xed, 0x50, 0x9d, 0x52, 0x18, 0xaf, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x81, 0xef,
	0x6f, 0xa0, 0xb2, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventClient is the client API for Event service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventClient interface {
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddReply, error)
}

type eventClient struct {
	cc *grpc.ClientConn
}

func NewEventClient(cc *grpc.ClientConn) EventClient {
	return &eventClient{cc}
}

func (c *eventClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddReply, error) {
	out := new(AddReply)
	err := c.cc.Invoke(ctx, "/pb.Event/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventServer is the server API for Event service.
type EventServer interface {
	Add(context.Context, *AddRequest) (*AddReply, error)
}

// UnimplementedEventServer can be embedded to have forward compatible implementations.
type UnimplementedEventServer struct {
}

func (*UnimplementedEventServer) Add(ctx context.Context, req *AddRequest) (*AddReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}

func RegisterEventServer(s *grpc.Server, srv EventServer) {
	s.RegisterService(&_Event_serviceDesc, srv)
}

func _Event_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Event/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Event_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Event",
	HandlerType: (*EventServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Event_Add_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "event.proto",
}
